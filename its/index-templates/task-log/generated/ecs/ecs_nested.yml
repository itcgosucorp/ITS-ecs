base:
  description: The `base` field set contains all fields which are at the root of the
    events. These fields are common across all types of events.
  fields:
    '@timestamp':
      dashed_name: timestamp
      description: 'Date/time when the event originated.

        This is the date/time extracted from the event, typically representing when
        the event was generated by the source.

        If the event source has no original timestamp, this value is typically populated
        by the first time the event was received by the pipeline.

        Required field for all events.'
      example: '2016-05-23T08:05:34.853Z'
      flat_name: '@timestamp'
      level: core
      name: '@timestamp'
      normalize: []
      required: true
      short: Date/time when the event originated.
      type: date
  group: 1
  name: base
  prefix: ''
  root: true
  short: All fields defined directly at the root of the events.
  title: Base
  type: group
event:
  description: 'The event fields are used for context information about the log or
    metric event itself.

    A log is defined as an event containing details of something that happened. Log
    events must include the time at which the thing happened. Examples of log events
    include a process starting on a host, a network packet being sent from a source
    to a destination, or a network connection between a client and a server being
    initiated or closed. A metric is defined as an event containing one or more numerical
    measurements and the time at which the measurement was taken. Examples of metric
    events include memory pressure measured on a host and device temperature. See
    the `event.kind` definition in this section for additional details about metric
    and state events.'
  fields:
    event.original:
      dashed_name: event-original
      description: 'Raw text message of entire event. Used to demonstrate log integrity
        or where the full log message (before splitting it up in multiple parts) may
        be required, e.g. for reindex.

        This field is not indexed and doc_values are disabled. It cannot be searched,
        but it can be retrieved from `_source`. If users wish to override this and
        index this field, please see `Field data types` in the `Elasticsearch Reference`.'
      doc_values: false
      example: Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124;
        worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232
      flat_name: event.original
      index: false
      level: core
      name: original
      normalize: []
      short: Raw text message of entire event.
      type: keyword
  group: 2
  name: event
  nestings:
  - event.its
  prefix: event.
  reused_here:
  - full: event.its
    schema_name: its_event
    short: Custom Event ITS field
  short: Fields breaking down the event details.
  title: Event
  type: group
its_task_log:
  description: ITS Task Log
  fields:
    its_task_log.app_code:
      dashed_name: its-task-log-app-code
      description: Application code.
      flat_name: its_task_log.app_code
      ignore_above: 1024
      level: custom
      name: app_code
      normalize: []
      short: Application code.
      type: keyword
    its_task_log.application_id:
      dashed_name: its-task-log-application-id
      description: Application ID.
      flat_name: its_task_log.application_id
      ignore_above: 1024
      level: custom
      name: application_id
      normalize: []
      short: Application ID.
      type: keyword
    its_task_log.campaign_id:
      dashed_name: its-task-log-campaign-id
      description: Campaign ID.
      flat_name: its_task_log.campaign_id
      ignore_above: 1024
      level: custom
      name: campaign_id
      normalize: []
      short: Campaign ID.
      type: keyword
    its_task_log.campaign_task_id:
      dashed_name: its-task-log-campaign-task-id
      description: Campaign Task ID.
      flat_name: its_task_log.campaign_task_id
      ignore_above: 1024
      level: custom
      name: campaign_task_id
      normalize: []
      short: Campaign Task ID.
      type: keyword
    its_task_log.character_id:
      dashed_name: its-task-log-character-id
      description: Character ID.
      flat_name: its_task_log.character_id
      ignore_above: 1024
      level: custom
      name: character_id
      normalize: []
      short: Character ID.
      type: keyword
    its_task_log.completed_task_info.banner_time_viewed:
      dashed_name: its-task-log-completed-task-info-banner-time-viewed
      description: Banner time viewed.
      flat_name: its_task_log.completed_task_info.banner_time_viewed
      level: custom
      name: completed_task_info.banner_time_viewed
      normalize: []
      short: Banner time viewed.
      type: integer
    its_task_log.completed_task_info.survey_result.answer.text:
      dashed_name: its-task-log-completed-task-info-survey-result-answer-text
      description: The answer's text.
      flat_name: its_task_log.completed_task_info.survey_result.answer.text
      ignore_above: 1024
      level: custom
      name: answer.text
      normalize: []
      original_fieldset: its_survey_result
      short: The answer's text.
      type: keyword
    its_task_log.completed_task_info.survey_result.answer.value:
      dashed_name: its-task-log-completed-task-info-survey-result-answer-value
      description: The answer's value.
      flat_name: its_task_log.completed_task_info.survey_result.answer.value
      ignore_above: 1024
      level: custom
      name: answer.value
      normalize: []
      original_fieldset: its_survey_result
      short: The answer's value.
      type: keyword
    its_task_log.completed_task_info.survey_result.choices.text:
      dashed_name: its-task-log-completed-task-info-survey-result-choices-text
      description: The choice'text options of radiogroup/checkbox question.
      flat_name: its_task_log.completed_task_info.survey_result.choices.text
      ignore_above: 1024
      level: custom
      name: choices.text
      normalize: []
      original_fieldset: its_survey_result
      short: The choice's text options of radiogroup/checkbox question.
      type: keyword
    its_task_log.completed_task_info.survey_result.choices.value:
      dashed_name: its-task-log-completed-task-info-survey-result-choices-value
      description: The choice's value options of radiogroup/checkbox question.
      flat_name: its_task_log.completed_task_info.survey_result.choices.value
      ignore_above: 1024
      level: custom
      name: choices.value
      normalize: []
      original_fieldset: its_survey_result
      short: The choice's value options of radiogroup/checkbox question.
      type: keyword
    its_task_log.completed_task_info.survey_result.columns.text:
      dashed_name: its-task-log-completed-task-info-survey-result-columns-text
      description: The column options's text of matrix question.
      flat_name: its_task_log.completed_task_info.survey_result.columns.text
      ignore_above: 1024
      level: custom
      name: columns.text
      normalize: []
      original_fieldset: its_survey_result
      short: The column options's text of matrix question.
      type: keyword
    its_task_log.completed_task_info.survey_result.columns.value:
      dashed_name: its-task-log-completed-task-info-survey-result-columns-value
      description: The column options's value of matrix question.
      flat_name: its_task_log.completed_task_info.survey_result.columns.value
      ignore_above: 1024
      level: custom
      name: columns.value
      normalize: []
      original_fieldset: its_survey_result
      short: The column options's value of matrix question.
      type: keyword
    its_task_log.completed_task_info.survey_result.matrix_answers.answer.text:
      dashed_name: its-task-log-completed-task-info-survey-result-matrix-answers-answer-text
      description: Answer's text.
      flat_name: its_task_log.completed_task_info.survey_result.matrix_answers.answer.text
      ignore_above: 1024
      level: custom
      name: answer.text
      normalize: []
      original_fieldset: its_survey_matrix_answer
      short: Answer's text.
      type: keyword
    its_task_log.completed_task_info.survey_result.matrix_answers.answer.value:
      dashed_name: its-task-log-completed-task-info-survey-result-matrix-answers-answer-value
      description: Answer's value.
      flat_name: its_task_log.completed_task_info.survey_result.matrix_answers.answer.value
      ignore_above: 1024
      level: custom
      name: answer.value
      normalize: []
      original_fieldset: its_survey_matrix_answer
      short: Answer's value.
      type: keyword
    its_task_log.completed_task_info.survey_result.matrix_answers.row.text:
      dashed_name: its-task-log-completed-task-info-survey-result-matrix-answers-row-text
      description: Row's text.
      flat_name: its_task_log.completed_task_info.survey_result.matrix_answers.row.text
      ignore_above: 1024
      level: custom
      name: row.text
      normalize: []
      original_fieldset: its_survey_matrix_answer
      short: Row's text.
      type: keyword
    its_task_log.completed_task_info.survey_result.matrix_answers.row.value:
      dashed_name: its-task-log-completed-task-info-survey-result-matrix-answers-row-value
      description: Row's value.
      flat_name: its_task_log.completed_task_info.survey_result.matrix_answers.row.value
      ignore_above: 1024
      level: custom
      name: row.value
      normalize: []
      original_fieldset: its_survey_matrix_answer
      short: Row's value.
      type: keyword
    its_task_log.completed_task_info.survey_result.name:
      dashed_name: its-task-log-completed-task-info-survey-result-name
      description: The survey question unique ID.
      flat_name: its_task_log.completed_task_info.survey_result.name
      ignore_above: 1024
      level: custom
      name: name
      normalize: []
      original_fieldset: its_survey_result
      short: Question unique ID.
      type: keyword
    its_task_log.completed_task_info.survey_result.rate_count:
      dashed_name: its-task-log-completed-task-info-survey-result-rate-count
      description: The rate count of rating question.
      flat_name: its_task_log.completed_task_info.survey_result.rate_count
      level: custom
      name: rate_count
      normalize: []
      original_fieldset: its_survey_result
      short: The rate count of rating question.
      type: integer
    its_task_log.completed_task_info.survey_result.rate_max:
      dashed_name: its-task-log-completed-task-info-survey-result-rate-max
      description: The rate count of rating question.
      flat_name: its_task_log.completed_task_info.survey_result.rate_max
      level: custom
      name: rate_max
      normalize: []
      original_fieldset: its_survey_result
      short: The rate count of rating question.
      type: integer
    its_task_log.completed_task_info.survey_result.rate_values.text:
      dashed_name: its-task-log-completed-task-info-survey-result-rate-values-text
      description: The rate value's text of rating question.
      flat_name: its_task_log.completed_task_info.survey_result.rate_values.text
      ignore_above: 1024
      level: custom
      name: rate_values.text
      normalize: []
      original_fieldset: its_survey_result
      short: The rate value's text of rating question.
      type: keyword
    its_task_log.completed_task_info.survey_result.rate_values.value:
      dashed_name: its-task-log-completed-task-info-survey-result-rate-values-value
      description: The rate value's value of rating question.
      flat_name: its_task_log.completed_task_info.survey_result.rate_values.value
      level: custom
      name: rate_values.value
      normalize: []
      original_fieldset: its_survey_result
      short: The rate value's value of rating question.
      type: integer
    its_task_log.completed_task_info.survey_result.rows.text:
      dashed_name: its-task-log-completed-task-info-survey-result-rows-text
      description: The row questions's text of matrix question.
      flat_name: its_task_log.completed_task_info.survey_result.rows.text
      ignore_above: 1024
      level: custom
      name: rows.text
      normalize: []
      original_fieldset: its_survey_result
      short: The row questions's text of matrix question.
      type: keyword
    its_task_log.completed_task_info.survey_result.rows.value:
      dashed_name: its-task-log-completed-task-info-survey-result-rows-value
      description: The row questions's value of matrix question.
      flat_name: its_task_log.completed_task_info.survey_result.rows.value
      ignore_above: 1024
      level: custom
      name: rows.value
      normalize: []
      original_fieldset: its_survey_result
      short: The row questions's value of matrix question.
      type: keyword
    its_task_log.completed_task_info.survey_result.title:
      dashed_name: its-task-log-completed-task-info-survey-result-title
      description: The survey question title.
      flat_name: its_task_log.completed_task_info.survey_result.title
      ignore_above: 1024
      level: custom
      name: title
      normalize: []
      original_fieldset: its_survey_result
      short: Question title.
      type: keyword
    its_task_log.completed_task_info.survey_result.type:
      dashed_name: its-task-log-completed-task-info-survey-result-type
      description: The survey question type.
      flat_name: its_task_log.completed_task_info.survey_result.type
      ignore_above: 1024
      level: custom
      name: type
      normalize: []
      original_fieldset: its_survey_result
      short: Question type.
      type: keyword
    its_task_log.completed_task_info.video_played_length:
      dashed_name: its-task-log-completed-task-info-video-played-length
      description: Video played length.
      flat_name: its_task_log.completed_task_info.video_played_length
      level: custom
      name: completed_task_info.video_played_length
      normalize: []
      short: Video played length.
      type: integer
    its_task_log.completed_task_info.video_total_length:
      dashed_name: its-task-log-completed-task-info-video-total-length
      description: Video total length.
      flat_name: its_task_log.completed_task_info.video_total_length
      level: custom
      name: completed_task_info.video_total_length
      normalize: []
      short: Video total length.
      type: integer
    its_task_log.completion_cond_metadata_rule:
      dashed_name: its-task-log-completion-cond-metadata-rule
      description: The string of completion_cond_metadata_rule.
      flat_name: its_task_log.completion_cond_metadata_rule
      ignore_above: 1024
      level: custom
      name: completion_cond_metadata_rule
      normalize: []
      short: The string of completion_cond_metadata_rule.
      type: keyword
    its_task_log.completion_cond_metadata_rule_metrics:
      dashed_name: its-task-log-completion-cond-metadata-rule-metrics
      description: Metrics relate to completion_cond_metadata_rule.
      flat_name: its_task_log.completion_cond_metadata_rule_metrics
      ignore_above: 1024
      level: custom
      name: completion_cond_metadata_rule_metrics
      normalize: []
      short: Metrics relate to completion_cond_metadata_rule.
      type: keyword
    its_task_log.end_date:
      dashed_name: its-task-log-end-date
      description: Campaign's end date.
      flat_name: its_task_log.end_date
      level: custom
      name: end_date
      normalize: []
      short: Campaign's end date.
      type: date
    its_task_log.is_show_result:
      dashed_name: its-task-log-is-show-result
      description: Postback dialog showing's status.
      flat_name: its_task_log.is_show_result
      level: custom
      name: is_show_result
      normalize: []
      short: Postback dialog showing's status.
      type: boolean
    its_task_log.log_type:
      dashed_name: its-task-log-log-type
      description: Task type (mission or notification)
      flat_name: its_task_log.log_type
      ignore_above: 1024
      level: custom
      name: log_type
      normalize: []
      short: Task type
      type: keyword
    its_task_log.metadata_rule:
      dashed_name: its-task-log-metadata-rule
      description: The string of metadata_rule.
      flat_name: its_task_log.metadata_rule
      ignore_above: 1024
      level: custom
      name: metadata_rule
      normalize: []
      short: The string of metadata_rule.
      type: keyword
    its_task_log.metadata_rule_metrics:
      dashed_name: its-task-log-metadata-rule-metrics
      description: Metrics relate to metadata_rule.
      flat_name: its_task_log.metadata_rule_metrics
      ignore_above: 1024
      level: custom
      name: metadata_rule_metrics
      normalize: []
      short: Metrics relate to metadata_rule.
      type: keyword
    its_task_log.postback.status:
      dashed_name: its-task-log-postback-status
      description: Postback status.
      flat_name: its_task_log.postback.status
      ignore_above: 1024
      level: custom
      name: postback.status
      normalize: []
      short: Postback status.
      type: keyword
    its_task_log.pub_code:
      dashed_name: its-task-log-pub-code
      description: Publisher code.
      flat_name: its_task_log.pub_code
      ignore_above: 1024
      level: custom
      name: pub_code
      normalize: []
      short: Publisher code.
      type: keyword
    its_task_log.publisher_id:
      dashed_name: its-task-log-publisher-id
      description: Publisher ID.
      flat_name: its_task_log.publisher_id
      ignore_above: 1024
      level: custom
      name: publisher_id
      normalize: []
      short: Publisher ID.
      type: keyword
    its_task_log.read_state:
      dashed_name: its-task-log-read-state
      description: Task's read state.
      flat_name: its_task_log.read_state
      ignore_above: 1024
      level: custom
      name: read_state
      normalize: []
      short: Task's read state.
      type: keyword
    its_task_log.server_id:
      dashed_name: its-task-log-server-id
      description: Server ID.
      flat_name: its_task_log.server_id
      ignore_above: 1024
      level: custom
      name: server_id
      normalize: []
      short: Server ID.
      type: keyword
    its_task_log.start_date:
      dashed_name: its-task-log-start-date
      description: Campaign's start date.
      flat_name: its_task_log.start_date
      level: custom
      name: start_date
      normalize: []
      short: Campaign's start date.
      type: date
    its_task_log.status:
      dashed_name: its-task-log-status
      description: Task status.
      flat_name: its_task_log.status
      ignore_above: 1024
      level: custom
      name: status
      normalize: []
      short: Task status.
      type: keyword
    its_task_log.task_channel:
      dashed_name: its-task-log-task-channel
      description: Task channel.
      flat_name: its_task_log.task_channel
      ignore_above: 1024
      level: custom
      name: task_channel
      normalize: []
      short: Task channel.
      type: keyword
    its_task_log.task_description:
      dashed_name: its-task-log-task-description
      description: Task description.
      flat_name: its_task_log.task_description
      ignore_above: 1024
      level: custom
      name: task_description
      normalize: []
      short: Task description.
      type: keyword
    its_task_log.task_name:
      dashed_name: its-task-log-task-name
      description: Task name.
      flat_name: its_task_log.task_name
      ignore_above: 1024
      level: custom
      name: task_name
      normalize: []
      short: Task name.
      type: keyword
    its_task_log.task_type:
      dashed_name: its-task-log-task-type
      description: Task type.
      flat_name: its_task_log.task_type
      ignore_above: 1024
      level: custom
      name: task_type
      normalize: []
      short: Task type.
      type: keyword
  group: 1
  name: its_task_log
  nestings:
  - its_task_log.completed_task_info.survey_result
  prefix: its_task_log.
  reused_here:
  - full: its_task_log.completed_task_info.survey_result
    schema_name: its_survey_result
    short: More information about survey result.
  short: ITS Task Log
  title: ITS Task Log
  type: group
user:
  description: 'The user fields describe information about the user that is relevant
    to the event.

    Fields can have one entry or multiple entries. If a user has more than one id,
    provide an array that includes all of them.'
  fields:
    user.id:
      dashed_name: user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      short: Unique identifier of the user.
      type: keyword
  group: 2
  name: user
  nestings:
  - user.changes
  - user.effective
  - user.group
  - user.its
  - user.risk
  - user.target
  prefix: user.
  reusable:
    expected:
    - as: user
      at: client
      full: client.user
    - as: user
      at: destination
      full: destination.user
    - as: user
      at: server
      full: server.user
    - as: user
      at: source
      full: source.user
    - as: target
      at: user
      full: user.target
      short_override: Targeted user of action taken.
    - as: effective
      at: user
      full: user.effective
      short_override: User whose privileges were assumed.
    - as: changes
      at: user
      full: user.changes
      short_override: Captures changes made to a user.
    - as: user
      at: process
      full: process.user
      short_override: The effective user (euid).
    - as: saved_user
      at: process
      full: process.saved_user
      short_override: The saved user (suid).
    - as: real_user
      at: process
      full: process.real_user
      short_override: The real user (ruid). Identifies the real owner of the process.
    - as: attested_user
      at: process
      beta: Reusing the `user` fields in this location is currently considered beta.
      full: process.attested_user
      short_override: The externally attested user based on an external source such
        as the Kube API.
    - as: user
      at: its_user.identities
      full: its_user.identities.user
    top_level: true
  reused_here:
  - full: user.group
    schema_name: group
    short: User's group relevant to the event.
  - full: user.risk
    schema_name: risk
    short: Fields for describing risk score and level.
  - full: user.its
    schema_name: its_user
    short: Custom User ITS field
  - full: user.target
    schema_name: user
    short: Targeted user of action taken.
  - full: user.effective
    schema_name: user
    short: User whose privileges were assumed.
  - full: user.changes
    schema_name: user
    short: Captures changes made to a user.
  short: Fields to describe the user relevant to the event.
  title: User
  type: group
