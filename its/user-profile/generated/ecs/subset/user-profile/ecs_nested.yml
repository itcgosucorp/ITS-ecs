base:
  description: The `base` field set contains all fields which are at the root of the
    events. These fields are common across all types of events.
  fields:
    '@timestamp':
      dashed_name: timestamp
      description: 'Date/time when the event originated.

        This is the date/time extracted from the event, typically representing when
        the event was generated by the source.

        If the event source has no original timestamp, this value is typically populated
        by the first time the event was received by the pipeline.

        Required field for all events.'
      example: '2016-05-23T08:05:34.853Z'
      flat_name: '@timestamp'
      level: core
      name: '@timestamp'
      normalize: []
      required: true
      short: Date/time when the event originated.
      type: date
    labels:
      dashed_name: labels
      description: 'Custom key/value pairs.

        Can be used to add meta information to events. Should not contain nested objects.
        All values are stored as keyword.

        Example: `docker` and `k8s` labels.'
      example: '{"application": "foo-bar", "env": "production"}'
      flat_name: labels
      level: core
      name: labels
      normalize: []
      object_type: keyword
      short: Custom key/value pairs.
      type: object
    message:
      dashed_name: message
      description: 'For log events the message field contains the log message, optimized
        for viewing in a log viewer.

        For structured logs without an original message field, other fields can be
        concatenated to form a human-readable summary of the event.

        If multiple messages exist, they can be combined into one message.'
      example: Hello World
      flat_name: message
      level: core
      name: message
      normalize: []
      short: Log message optimized for viewing in a log viewer.
      type: match_only_text
    tags:
      dashed_name: tags
      description: List of keywords used to tag each event.
      example: '["production", "env2"]'
      flat_name: tags
      ignore_above: 1024
      level: core
      name: tags
      normalize:
      - array
      short: List of keywords used to tag each event.
      type: keyword
  group: 1
  name: base
  prefix: ''
  root: true
  short: All fields defined directly at the root of the events.
  title: Base
  type: group
client:
  description: 'A client is defined as the initiator of a network connection for events
    regarding sessions, connections, or bidirectional flow records.

    For TCP events, the client is the initiator of the TCP connection that sends the
    SYN packet(s). For other protocols, the client is generally the initiator or requestor
    in the network transaction. Some systems use the term "originator" to refer the
    client in TCP connections. The client fields describe details about the system
    acting as the client in the network event. Client fields are usually populated
    in conjunction with server fields. Client fields are generally not populated for
    packet-level events.

    Client / server representations can add semantic context to an exchange, which
    is helpful to visualize the data in certain situations. If your context falls
    in that category, you should still ensure that source and destination are filled
    appropriately.'
  fields:
    client.address:
      dashed_name: client-address
      description: 'Some event client addresses are defined ambiguously. The event
        will sometimes list an IP, a domain or a unix socket.  You should always store
        the raw address in the `.address` field.

        Then it should be duplicated to `.ip` or `.domain`, depending on which one
        it is.'
      flat_name: client.address
      ignore_above: 1024
      level: extended
      name: address
      normalize: []
      short: Client network address.
      type: keyword
    client.as.number:
      dashed_name: client-as-number
      description: Unique number allocated to the autonomous system. The autonomous
        system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      flat_name: client.as.number
      level: extended
      name: number
      normalize: []
      original_fieldset: as
      short: Unique number allocated to the autonomous system.
      type: long
    client.as.organization.name:
      dashed_name: client-as-organization-name
      description: Organization name.
      example: Google LLC
      flat_name: client.as.organization.name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: client.as.organization.name.text
        name: text
        type: match_only_text
      name: organization.name
      normalize: []
      original_fieldset: as
      short: Organization name.
      type: keyword
    client.bytes:
      dashed_name: client-bytes
      description: Bytes sent from the client to the server.
      example: 184
      flat_name: client.bytes
      format: bytes
      level: core
      name: bytes
      normalize: []
      short: Bytes sent from the client to the server.
      type: long
    client.domain:
      dashed_name: client-domain
      description: 'The domain name of the client system.

        This value may be a host name, a fully qualified domain name, or another host
        naming format. The value may derive from the original event or be added from
        enrichment.'
      example: foo.example.com
      flat_name: client.domain
      ignore_above: 1024
      level: core
      name: domain
      normalize: []
      short: The domain name of the client.
      type: keyword
    client.geo.city_name:
      dashed_name: client-geo-city-name
      description: City name.
      example: Montreal
      flat_name: client.geo.city_name
      ignore_above: 1024
      level: core
      name: city_name
      normalize: []
      original_fieldset: geo
      short: City name.
      type: keyword
    client.geo.continent_code:
      dashed_name: client-geo-continent-code
      description: Two-letter code representing continent's name.
      example: NA
      flat_name: client.geo.continent_code
      ignore_above: 1024
      level: core
      name: continent_code
      normalize: []
      original_fieldset: geo
      short: Continent code.
      type: keyword
    client.geo.continent_name:
      dashed_name: client-geo-continent-name
      description: Name of the continent.
      example: North America
      flat_name: client.geo.continent_name
      ignore_above: 1024
      level: core
      name: continent_name
      normalize: []
      original_fieldset: geo
      short: Name of the continent.
      type: keyword
    client.geo.country_iso_code:
      dashed_name: client-geo-country-iso-code
      description: Country ISO code.
      example: CA
      flat_name: client.geo.country_iso_code
      ignore_above: 1024
      level: core
      name: country_iso_code
      normalize: []
      original_fieldset: geo
      short: Country ISO code.
      type: keyword
    client.geo.country_name:
      dashed_name: client-geo-country-name
      description: Country name.
      example: Canada
      flat_name: client.geo.country_name
      ignore_above: 1024
      level: core
      name: country_name
      normalize: []
      original_fieldset: geo
      short: Country name.
      type: keyword
    client.geo.location:
      dashed_name: client-geo-location
      description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      flat_name: client.geo.location
      level: core
      name: location
      normalize: []
      original_fieldset: geo
      short: Longitude and latitude.
      type: geo_point
    client.geo.name:
      dashed_name: client-geo-name
      description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      flat_name: client.geo.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: geo
      short: User-defined description of a location.
      type: keyword
    client.geo.postal_code:
      dashed_name: client-geo-postal-code
      description: 'Postal code associated with the location.

        Values appropriate for this field may also be known as a postcode or ZIP code
        and will vary widely from country to country.'
      example: 94040
      flat_name: client.geo.postal_code
      ignore_above: 1024
      level: core
      name: postal_code
      normalize: []
      original_fieldset: geo
      short: Postal code.
      type: keyword
    client.geo.region_iso_code:
      dashed_name: client-geo-region-iso-code
      description: Region ISO code.
      example: CA-QC
      flat_name: client.geo.region_iso_code
      ignore_above: 1024
      level: core
      name: region_iso_code
      normalize: []
      original_fieldset: geo
      short: Region ISO code.
      type: keyword
    client.geo.region_name:
      dashed_name: client-geo-region-name
      description: Region name.
      example: Quebec
      flat_name: client.geo.region_name
      ignore_above: 1024
      level: core
      name: region_name
      normalize: []
      original_fieldset: geo
      short: Region name.
      type: keyword
    client.geo.timezone:
      dashed_name: client-geo-timezone
      description: The time zone of the location, such as IANA time zone name.
      example: America/Argentina/Buenos_Aires
      flat_name: client.geo.timezone
      ignore_above: 1024
      level: core
      name: timezone
      normalize: []
      original_fieldset: geo
      short: Time zone.
      type: keyword
    client.ip:
      dashed_name: client-ip
      description: IP address of the client (IPv4 or IPv6).
      flat_name: client.ip
      level: core
      name: ip
      normalize: []
      short: IP address of the client.
      type: ip
    client.mac:
      dashed_name: client-mac
      description: 'MAC address of the client.

        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit
        byte) is represented by two [uppercase] hexadecimal digits giving the value
        of the octet as an unsigned integer. Successive octets are separated by a
        hyphen.'
      example: 00-00-5E-00-53-23
      flat_name: client.mac
      ignore_above: 1024
      level: core
      name: mac
      normalize: []
      pattern: ^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$
      short: MAC address of the client.
      type: keyword
    client.nat.ip:
      dashed_name: client-nat-ip
      description: 'Translated IP of source based NAT sessions (e.g. internal client
        to internet).

        Typically connections traversing load balancers, firewalls, or routers.'
      flat_name: client.nat.ip
      level: extended
      name: nat.ip
      normalize: []
      short: Client NAT ip address
      type: ip
    client.nat.port:
      dashed_name: client-nat-port
      description: 'Translated port of source based NAT sessions (e.g. internal client
        to internet).

        Typically connections traversing load balancers, firewalls, or routers.'
      flat_name: client.nat.port
      format: string
      level: extended
      name: nat.port
      normalize: []
      short: Client NAT port
      type: long
    client.packets:
      dashed_name: client-packets
      description: Packets sent from the client to the server.
      example: 12
      flat_name: client.packets
      level: core
      name: packets
      normalize: []
      short: Packets sent from the client to the server.
      type: long
    client.port:
      dashed_name: client-port
      description: Port of the client.
      flat_name: client.port
      format: string
      level: core
      name: port
      normalize: []
      short: Port of the client.
      type: long
    client.registered_domain:
      dashed_name: client-registered-domain
      description: 'The highest registered client domain, stripped of the subdomain.

        For example, the registered domain for "foo.example.com" is "example.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: example.com
      flat_name: client.registered_domain
      ignore_above: 1024
      level: extended
      name: registered_domain
      normalize: []
      short: The highest registered client domain, stripped of the subdomain.
      type: keyword
    client.subdomain:
      dashed_name: client-subdomain
      description: 'The subdomain portion of a fully qualified domain name includes
        all of the names except the host name under the registered_domain.  In a partially
        qualified domain, or if the the qualification level of the full name cannot
        be determined, subdomain contains all of the names below the registered domain.

        For example the subdomain portion of "www.east.mydomain.co.uk" is "east".
        If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com",
        the subdomain field should contain "sub2.sub1", with no trailing period.'
      example: east
      flat_name: client.subdomain
      ignore_above: 1024
      level: extended
      name: subdomain
      normalize: []
      short: The subdomain of the domain.
      type: keyword
    client.top_level_domain:
      dashed_name: client-top-level-domain
      description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for example.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      flat_name: client.top_level_domain
      ignore_above: 1024
      level: extended
      name: top_level_domain
      normalize: []
      short: The effective top level domain (com, org, net, co.uk).
      type: keyword
    client.user.domain:
      dashed_name: client-user-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: client.user.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    client.user.email:
      dashed_name: client-user-email
      description: User email address.
      flat_name: client.user.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    client.user.full_name:
      dashed_name: client-user-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: client.user.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: client.user.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    client.user.group.domain:
      dashed_name: client-user-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: client.user.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    client.user.group.id:
      dashed_name: client-user-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: client.user.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    client.user.group.name:
      dashed_name: client-user-group-name
      description: Name of the group.
      flat_name: client.user.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    client.user.hash:
      dashed_name: client-user-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: client.user.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    client.user.id:
      dashed_name: client-user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: client.user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    client.user.name:
      dashed_name: client-user-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: client.user.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: client.user.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    client.user.risk.calculated_level:
      dashed_name: client-user-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: client.user.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    client.user.risk.calculated_score:
      dashed_name: client-user-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: client.user.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    client.user.risk.calculated_score_norm:
      dashed_name: client-user-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: client.user.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    client.user.risk.static_level:
      dashed_name: client-user-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: client.user.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    client.user.risk.static_score:
      dashed_name: client-user-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: client.user.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    client.user.risk.static_score_norm:
      dashed_name: client-user-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: client.user.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    client.user.roles:
      dashed_name: client-user-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: client.user.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
  group: 2
  name: client
  nestings:
  - client.as
  - client.geo
  - client.user
  prefix: client.
  reused_here:
  - full: client.as
    schema_name: as
    short: Fields describing an Autonomous System (Internet routing prefix).
  - full: client.geo
    schema_name: geo
    short: Fields describing a location.
  - full: client.user
    schema_name: user
    short: Fields to describe the user relevant to the event.
  short: Fields about the client side of a network connection, used with server.
  title: Client
  type: group
ecs:
  description: Meta-information specific to ECS.
  fields:
    ecs.version:
      dashed_name: ecs-version
      description: 'ECS version this event conforms to. `ecs.version` is a required
        field and must exist in all events.

        When querying across multiple indices -- which may conform to slightly different
        ECS versions -- this field lets integrations adjust to the schema version
        of the events.'
      example: 1.0.0
      flat_name: ecs.version
      ignore_above: 1024
      level: core
      name: version
      normalize: []
      required: true
      short: ECS version this event conforms to.
      type: keyword
  group: 2
  name: ecs
  prefix: ecs.
  short: Meta-information specific to ECS.
  title: ECS
  type: group
event:
  description: 'The event fields are used for context information about the log or
    metric event itself.

    A log is defined as an event containing details of something that happened. Log
    events must include the time at which the thing happened. Examples of log events
    include a process starting on a host, a network packet being sent from a source
    to a destination, or a network connection between a client and a server being
    initiated or closed. A metric is defined as an event containing one or more numerical
    measurements and the time at which the measurement was taken. Examples of metric
    events include memory pressure measured on a host and device temperature. See
    the `event.kind` definition in this section for additional details about metric
    and state events.'
  fields:
    event.action:
      dashed_name: event-action
      description: 'The action captured by the event.

        This describes the information in the event. It is more specific than `event.category`.
        Examples are `group-add`, `process-started`, `file-created`. The value is
        normally defined by the implementer.'
      example: user-password-change
      flat_name: event.action
      ignore_above: 1024
      level: core
      name: action
      normalize: []
      short: The action captured by the event.
      type: keyword
    event.agent_id_status:
      dashed_name: event-agent-id-status
      description: 'Agents are normally responsible for populating the `agent.id`
        field value. If the system receiving events is capable of validating the value
        based on authentication information for the client then this field can be
        used to reflect the outcome of that validation.

        For example if the agent''s connection is authenticated with mTLS and the
        client cert contains the ID of the agent to which the cert was issued then
        the `agent.id` value in events can be checked against the certificate. If
        the values match then `event.agent_id_status: verified` is added to the event,
        otherwise one of the other allowed values should be used.

        If no validation is performed then the field should be omitted.

        The allowed values are:

        `verified` - The `agent.id` field value matches expected value obtained from
        auth metadata.

        `mismatch` - The `agent.id` field value does not match the expected value
        obtained from auth metadata.

        `missing` - There was no `agent.id` field in the event to validate.

        `auth_metadata_missing` - There was no auth metadata or it was missing information
        about the agent ID.'
      example: verified
      flat_name: event.agent_id_status
      ignore_above: 1024
      level: extended
      name: agent_id_status
      normalize: []
      short: Validation status of the event's agent.id field.
      type: keyword
    event.category:
      allowed_values:
      - description: Events in this category annotate API calls that occured on a
          system. Typical sources for those events could be from the Operating System
          level through the native libraries (for example Windows Win32, Linux libc,
          etc.), or managed sources of events (such as ETW, syslog), but can also
          include network protocols (such as SOAP, RPC, Websocket, REST, etc.)
        expected_event_types:
        - access
        - admin
        - allowed
        - change
        - creation
        - deletion
        - denied
        - end
        - info
        - start
        - user
        name: api
      - description: Events in this category are related to the challenge and response
          process in which credentials are supplied and verified to allow the creation
          of a session. Common sources for these logs are Windows event logs and ssh
          logs. Visualize and analyze events in this category to look for failed logins,
          and other authentication-related activity.
        expected_event_types:
        - start
        - end
        - info
        name: authentication
      - description: 'Events in the configuration category have to deal with creating,
          modifying, or deleting the settings or parameters of an application, process,
          or system.

          Example sources include security policy change logs, configuration auditing
          logging, and system integrity monitoring.'
        expected_event_types:
        - access
        - change
        - creation
        - deletion
        - info
        name: configuration
      - description: The database category denotes events and metrics relating to
          a data storage and retrieval system. Note that use of this category is not
          limited to relational database systems. Examples include event logs from
          MS SQL, MySQL, Elasticsearch, MongoDB, etc. Use this category to visualize
          and analyze database activity such as accesses and changes.
        expected_event_types:
        - access
        - change
        - info
        - error
        name: database
      - description: 'Events in the driver category have to do with operating system
          device drivers and similar software entities such as Windows drivers, kernel
          extensions, kernel modules, etc.

          Use events and metrics in this category to visualize and analyze driver-related
          activity and status on hosts.'
        expected_event_types:
        - change
        - end
        - info
        - start
        name: driver
      - description: 'This category is used for events relating to email messages,
          email attachments, and email network or protocol activity.

          Emails events can be produced by email security gateways, mail transfer
          agents, email cloud service providers, or mail server monitoring applications.'
        expected_event_types:
        - info
        name: email
      - description: Relating to a set of information that has been created on, or
          has existed on a filesystem. Use this category of events to visualize and
          analyze the creation, access, and deletions of files. Events in this category
          can come from both host-based and network-based sources. An example source
          of a network-based detection of a file transfer would be the Zeek file.log.
        expected_event_types:
        - access
        - change
        - creation
        - deletion
        - info
        name: file
      - description: 'Use this category to visualize and analyze information such
          as host inventory or host lifecycle events.

          Most of the events in this category can usually be observed from the outside,
          such as from a hypervisor or a control plane''s point of view. Some can
          also be seen from within, such as "start" or "end".

          Note that this category is for information about hosts themselves; it is
          not meant to capture activity "happening on a host".'
        expected_event_types:
        - access
        - change
        - end
        - info
        - start
        name: host
      - description: Identity and access management (IAM) events relating to users,
          groups, and administration. Use this category to visualize and analyze IAM-related
          logs and data from active directory, LDAP, Okta, Duo, and other IAM systems.
        expected_event_types:
        - admin
        - change
        - creation
        - deletion
        - group
        - info
        - user
        name: iam
      - description: Relating to intrusion detections from IDS/IPS systems and functions,
          both network and host-based. Use this category to visualize and analyze
          intrusion detection alerts from systems such as Snort, Suricata, and Palo
          Alto threat detections.
        expected_event_types:
        - allowed
        - denied
        - info
        name: intrusion_detection
      - description: Events in this category refer to the loading of a library, such
          as (dll / so / dynlib), into a process. Use this category to visualize and
          analyze library loading related activity on hosts.  Keep in mind that driver
          related activity will be captured under the "driver" category above.
        expected_event_types:
        - start
        name: library
      - description: Malware detection events and alerts. Use this category to visualize
          and analyze malware detections from EDR/EPP systems such as Elastic Endpoint
          Security, Symantec Endpoint Protection, Crowdstrike, and network IDS/IPS
          systems such as Suricata, or other sources of malware-related events such
          as Palo Alto Networks threat logs and Wildfire logs.
        expected_event_types:
        - info
        name: malware
      - description: Relating to all network activity, including network connection
          lifecycle, network traffic, and essentially any event that includes an IP
          address. Many events containing decoded network protocol transactions fit
          into this category. Use events in this category to visualize or analyze
          counts of network ports, protocols, addresses, geolocation information,
          etc.
        expected_event_types:
        - access
        - allowed
        - connection
        - denied
        - end
        - info
        - protocol
        - start
        name: network
      - description: Relating to software packages installed on hosts. Use this category
          to visualize and analyze inventory of software installed on various hosts,
          or to determine host vulnerability in the absence of vulnerability scan
          data.
        expected_event_types:
        - access
        - change
        - deletion
        - info
        - installation
        - start
        name: package
      - description: Use this category of events to visualize and analyze process-specific
          information such as lifecycle events or process ancestry.
        expected_event_types:
        - access
        - change
        - end
        - info
        - start
        name: process
      - description: Having to do with settings and assets stored in the Windows registry.
          Use this category to visualize and analyze activity such as registry access
          and modifications.
        expected_event_types:
        - access
        - change
        - creation
        - deletion
        name: registry
      - description: The session category is applied to events and metrics regarding
          logical persistent connections to hosts and services. Use this category
          to visualize and analyze interactive or automated persistent connections
          between assets. Data for this category may come from Windows Event logs,
          SSH logs, or stateless sessions such as HTTP cookie-based sessions, etc.
        expected_event_types:
        - start
        - end
        - info
        name: session
      - description: Use this category to visualize and analyze events describing
          threat actors' targets, motives, or behaviors.
        expected_event_types:
        - indicator
        name: threat
      - description: Relating to vulnerability scan results. Use this category to
          analyze vulnerabilities detected by Tenable, Qualys, internal scanners,
          and other vulnerability management sources.
        expected_event_types:
        - info
        name: vulnerability
      - description: 'Relating to web server access. Use this category to create a
          dashboard of web server/proxy activity from apache, IIS, nginx web servers,
          etc. Note: events from network observers such as Zeek http log may also
          be included in this category.'
        expected_event_types:
        - access
        - error
        - info
        name: web
      dashed_name: event-category
      description: 'This is one of four ECS Categorization Fields, and indicates the
        second level in the ECS category hierarchy.

        `event.category` represents the "big buckets" of ECS categories. For example,
        filtering on `event.category:process` yields all events relating to process
        activity. This field is closely related to `event.type`, which is used as
        a subcategory.

        This field is an array. This will allow proper categorization of some events
        that fall in multiple categories.'
      example: authentication
      flat_name: event.category
      ignore_above: 1024
      level: core
      name: category
      normalize:
      - array
      short: Event category. The second categorization field in the hierarchy.
      type: keyword
    event.code:
      dashed_name: event-code
      description: 'Identification code for this event, if one exists.

        Some event sources use event codes to identify messages unambiguously, regardless
        of message language or wording adjustments over time. An example of this is
        the Windows Event ID.'
      example: 4648
      flat_name: event.code
      ignore_above: 1024
      level: extended
      name: code
      normalize: []
      short: Identification code for this event.
      type: keyword
    event.created:
      dashed_name: event-created
      description: '`event.created` contains the date/time when the event was first
        read by an agent, or by your pipeline.

        This field is distinct from `@timestamp` in that `@timestamp` typically contain
        the time extracted from the original event.

        In most situations, these two timestamps will be slightly different. The difference
        can be used to calculate the delay between your source generating an event,
        and the time when your agent first processed it. This can be used to monitor
        your agent''s or pipeline''s ability to keep up with your event source.

        In case the two timestamps are identical, `@timestamp` should be used.'
      example: '2016-05-23T08:05:34.857Z'
      flat_name: event.created
      level: core
      name: created
      normalize: []
      short: Time when the event was first read by an agent or by your pipeline.
      type: date
    event.dataset:
      dashed_name: event-dataset
      description: 'Name of the dataset.

        If an event source publishes more than one type of log or events (e.g. access
        log, error log), the dataset is used to specify which one the event comes
        from.

        It''s recommended but not required to start the dataset name with the module
        name, followed by a dot, then the dataset name.'
      example: apache.access
      flat_name: event.dataset
      ignore_above: 1024
      level: core
      name: dataset
      normalize: []
      short: Name of the dataset.
      type: keyword
    event.duration:
      dashed_name: event-duration
      description: 'Duration of the event in nanoseconds.

        If `event.start` and `event.end` are known this value should be the difference
        between the end and start time.'
      flat_name: event.duration
      format: duration
      input_format: nanoseconds
      level: core
      name: duration
      normalize: []
      output_format: asMilliseconds
      output_precision: 1
      short: Duration of the event in nanoseconds.
      type: long
    event.end:
      dashed_name: event-end
      description: '`event.end` contains the date when the event ended or when the
        activity was last observed.'
      flat_name: event.end
      level: extended
      name: end
      normalize: []
      short: '`event.end` contains the date when the event ended or when the activity
        was last observed.'
      type: date
    event.hash:
      dashed_name: event-hash
      description: Hash (perhaps logstash fingerprint) of raw field to be able to
        demonstrate log integrity.
      example: 123456789012345678901234567890ABCD
      flat_name: event.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      short: Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate
        log integrity.
      type: keyword
    event.id:
      dashed_name: event-id
      description: Unique ID to describe the event.
      example: 8a4f500d
      flat_name: event.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      short: Unique ID to describe the event.
      type: keyword
    event.ingested:
      dashed_name: event-ingested
      description: 'Timestamp when an event arrived in the central data store.

        This is different from `@timestamp`, which is when the event originally occurred.  It''s
        also different from `event.created`, which is meant to capture the first time
        an agent saw the event.

        In normal conditions, assuming no tampering, the timestamps should chronologically
        look like this: `@timestamp` < `event.created` < `event.ingested`.'
      example: '2016-05-23T08:05:35.101Z'
      flat_name: event.ingested
      level: core
      name: ingested
      normalize: []
      short: Timestamp when an event arrived in the central data store.
      type: date
    event.kind:
      allowed_values:
      - description: 'This value indicates an event such as an alert or notable event,
          triggered by a detection rule executing externally to the Elastic Stack.

          `event.kind:alert` is often populated for events coming from firewalls,
          intrusion detection systems, endpoint detection and response systems, and
          so on.

          This value is not used by Elastic solutions for alert documents that are
          created by rules executing within the Kibana alerting framework.'
        name: alert
      - beta: This event categorization value is beta and subject to change.
        description: 'This value indicates events whose primary purpose is to store
          an inventory of assets/entities and their attributes. Assets/entities are
          objects (such as users and hosts) that are expected to be subjects of detailed
          analysis within the system.

          Examples include lists of user identities or accounts ingested from directory
          services such as Active Directory (AD), inventory of hosts pulled from configuration
          management databases (CMDB), and lists of cloud storage buckets pulled from
          cloud provider APIs.

          This value is used by Elastic Security for asset management solutions. `event.kind:
          asset` is not used for normal system events or logs that are coming from
          an asset/entity, nor is it used for system events or logs coming from a
          directory or CMDB system.'
        name: asset
      - description: 'The `enrichment` value indicates an event collected to provide
          additional context, often to other events.

          An example is collecting indicators of compromise (IOCs) from a threat intelligence
          provider with the intent to use those values to enrich other events. The
          IOC events from the intelligence provider should be categorized as `event.kind:enrichment`.'
        name: enrichment
      - description: This value is the most general and most common value for this
          field. It is used to represent events that indicate that something happened.
        name: event
      - description: 'This value is used to indicate that this event describes a numeric
          measurement taken at given point in time.

          Examples include CPU utilization, memory usage, or device temperature.

          Metric events are often collected on a predictable frequency, such as once
          every few seconds, or once a minute, but can also be used to describe ad-hoc
          numeric metric queries.'
        name: metric
      - description: 'The state value is similar to metric, indicating that this event
          describes a measurement taken at given point in time, except that the measurement
          does not result in a numeric value, but rather one of a fixed set of categorical
          values that represent conditions or states.

          Examples include periodic events reporting Elasticsearch cluster state (green/yellow/red),
          the state of a TCP connection (open, closed, fin_wait, etc.), the state
          of a host with respect to a software vulnerability (vulnerable, not vulnerable),
          and the state of a system regarding compliance with a regulatory standard
          (compliant, not compliant).

          Note that an event that describes a change of state would not use `event.kind:state`,
          but instead would use ''event.kind:event'' since a state change fits the
          more general event definition of something that happened.

          State events are often collected on a predictable frequency, such as once
          every few seconds, once a minute, once an hour, or once a day, but can also
          be used to describe ad-hoc state queries.'
        name: state
      - description: This value indicates that an error occurred during the ingestion
          of this event, and that event data may be missing, inconsistent, or incorrect.
          `event.kind:pipeline_error` is often associated with parsing errors.
        name: pipeline_error
      - description: 'This value is used by Elastic solutions (e.g., Security, Observability)
          for alert documents that are created by rules executing within the Kibana
          alerting framework.

          Usage of this value is reserved, and data ingestion pipelines must not populate
          `event.kind` with the value "signal".'
        name: signal
      dashed_name: event-kind
      description: 'This is one of four ECS Categorization Fields, and indicates the
        highest level in the ECS category hierarchy.

        `event.kind` gives high-level information about what type of information the
        event contains, without being specific to the contents of the event. For example,
        values of this field distinguish alert events from metric events.

        The value of this field can be used to inform how these kinds of events should
        be handled. They may warrant different retention, different access control,
        it may also help understand whether the data is coming in at a regular interval
        or not.'
      example: alert
      flat_name: event.kind
      ignore_above: 1024
      level: core
      name: kind
      normalize: []
      short: The kind of the event. The highest categorization field in the hierarchy.
      type: keyword
    event.module:
      dashed_name: event-module
      description: 'Name of the module this data is coming from.

        If your monitoring agent supports the concept of modules or plugins to process
        events of a given source (e.g. Apache logs), `event.module` should contain
        the name of this module.'
      example: apache
      flat_name: event.module
      ignore_above: 1024
      level: core
      name: module
      normalize: []
      short: Name of the module this data is coming from.
      type: keyword
    event.original:
      dashed_name: event-original
      description: 'Raw text message of entire event. Used to demonstrate log integrity
        or where the full log message (before splitting it up in multiple parts) may
        be required, e.g. for reindex.

        This field is not indexed and doc_values are disabled. It cannot be searched,
        but it can be retrieved from `_source`. If users wish to override this and
        index this field, please see `Field data types` in the `Elasticsearch Reference`.'
      doc_values: false
      example: Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124;
        worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232
      flat_name: event.original
      index: false
      level: core
      name: original
      normalize: []
      short: Raw text message of entire event.
      type: keyword
    event.outcome:
      allowed_values:
      - description: Indicates that this event describes a failed result. A common
          example is `event.category:file AND event.type:access AND event.outcome:failure`
          to indicate that a file access was attempted, but was not successful.
        name: failure
      - description: Indicates that this event describes a successful result. A common
          example is `event.category:file AND event.type:create AND event.outcome:success`
          to indicate that a file was successfully created.
        name: success
      - description: Indicates that this event describes only an attempt for which
          the result is unknown from the perspective of the event producer. For example,
          if the event contains information only about the request side of a transaction
          that results in a response, populating `event.outcome:unknown` in the request
          event is appropriate. The unknown value should not be used when an outcome
          doesn't make logical sense for the event. In such cases `event.outcome`
          should not be populated.
        name: unknown
      dashed_name: event-outcome
      description: 'This is one of four ECS Categorization Fields, and indicates the
        lowest level in the ECS category hierarchy.

        `event.outcome` simply denotes whether the event represents a success or a
        failure from the perspective of the entity that produced the event.

        Note that when a single transaction is described in multiple events, each
        event may populate different values of `event.outcome`, according to their
        perspective.

        Also note that in the case of a compound event (a single event that contains
        multiple logical events), this field should be populated with the value that
        best captures the overall success or failure from the perspective of the event
        producer.

        Further note that not all events will have an associated outcome. For example,
        this field is generally not populated for metric events, events with `event.type:info`,
        or any events for which an outcome does not make logical sense.'
      example: success
      flat_name: event.outcome
      ignore_above: 1024
      level: core
      name: outcome
      normalize: []
      short: The outcome of the event. The lowest level categorization field in the
        hierarchy.
      type: keyword
    event.provider:
      dashed_name: event-provider
      description: 'Source of the event.

        Event transports such as Syslog or the Windows Event Log typically mention
        the source of an event. It can be the name of the software that generated
        the event (e.g. Sysmon, httpd), or of a subsystem of the operating system
        (kernel, Microsoft-Windows-Security-Auditing).'
      example: kernel
      flat_name: event.provider
      ignore_above: 1024
      level: extended
      name: provider
      normalize: []
      short: Source of the event.
      type: keyword
    event.reason:
      dashed_name: event-reason
      description: 'Reason why this event happened, according to the source.

        This describes the why of a particular action or outcome captured in the event.
        Where `event.action` captures the action from the event, `event.reason` describes
        why that action was taken. For example, a web proxy with an `event.action`
        which denied the request may also populate `event.reason` with the reason
        why (e.g. `blocked site`).'
      example: Terminated an unexpected process
      flat_name: event.reason
      ignore_above: 1024
      level: extended
      name: reason
      normalize: []
      short: Reason why this event happened, according to the source
      type: keyword
    event.reference:
      dashed_name: event-reference
      description: 'Reference URL linking to additional information about this event.

        This URL links to a static definition of this event. Alert events, indicated
        by `event.kind:alert`, are a common use case for this field.'
      example: https://system.example.com/event/#0001234
      flat_name: event.reference
      ignore_above: 1024
      level: extended
      name: reference
      normalize: []
      short: Event reference URL
      type: keyword
    event.risk_score:
      dashed_name: event-risk-score
      description: Risk score or priority of the event (e.g. security solutions).
        Use your system's original value here.
      flat_name: event.risk_score
      level: core
      name: risk_score
      normalize: []
      short: Risk score or priority of the event (e.g. security solutions). Use your
        system's original value here.
      type: float
    event.risk_score_norm:
      dashed_name: event-risk-score-norm
      description: 'Normalized risk score or priority of the event, on a scale of
        0 to 100.

        This is mainly useful if you use more than one system that assigns risk scores,
        and you want to see a normalized value across all systems.'
      flat_name: event.risk_score_norm
      level: extended
      name: risk_score_norm
      normalize: []
      short: Normalized risk score or priority of the event (0-100).
      type: float
    event.sequence:
      dashed_name: event-sequence
      description: 'Sequence number of the event.

        The sequence number is a value published by some event sources, to make the
        exact ordering of events unambiguous, regardless of the timestamp precision.'
      flat_name: event.sequence
      format: string
      level: extended
      name: sequence
      normalize: []
      short: Sequence number of the event.
      type: long
    event.severity:
      dashed_name: event-severity
      description: 'The numeric severity of the event according to your event source.

        What the different severity values mean can be different between sources and
        use cases. It''s up to the implementer to make sure severities are consistent
        across events from the same source.

        The Syslog severity belongs in `log.syslog.severity.code`. `event.severity`
        is meant to represent the severity according to the event source (e.g. firewall,
        IDS). If the event source does not publish its own severity, you may optionally
        copy the `log.syslog.severity.code` to `event.severity`.'
      example: 7
      flat_name: event.severity
      format: string
      level: core
      name: severity
      normalize: []
      short: Numeric severity of the event.
      type: long
    event.start:
      dashed_name: event-start
      description: '`event.start` contains the date when the event started or when
        the activity was first observed.'
      flat_name: event.start
      level: extended
      name: start
      normalize: []
      short: '`event.start` contains the date when the event started or when the activity
        was first observed.'
      type: date
    event.timezone:
      dashed_name: event-timezone
      description: 'This field should be populated when the event''s timestamp does
        not include timezone information already (e.g. default Syslog timestamps).
        It''s optional otherwise.

        Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"),
        abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").'
      flat_name: event.timezone
      ignore_above: 1024
      level: extended
      name: timezone
      normalize: []
      short: Event time zone.
      type: keyword
    event.type:
      allowed_values:
      - description: The access event type is used for the subset of events within
          a category that indicate that something was accessed. Common examples include
          `event.category:database AND event.type:access`, or `event.category:file
          AND event.type:access`. Note for file access, both directory listings and
          file opens should be included in this subcategory. You can further distinguish
          access operations using the ECS `event.action` field.
        name: access
      - description: 'The admin event type is used for the subset of events within
          a category that are related to admin objects. For example, administrative
          changes within an IAM framework that do not specifically affect a user or
          group (e.g., adding new applications to a federation solution or connecting
          discrete forests in Active Directory) would fall into this subcategory.
          Common example: `event.category:iam AND event.type:change AND event.type:admin`.
          You can further distinguish admin operations using the ECS `event.action`
          field.'
        name: admin
      - description: The allowed event type is used for the subset of events within
          a category that indicate that something was allowed. Common examples include
          `event.category:network AND event.type:connection AND event.type:allowed`
          (to indicate a network firewall event for which the firewall disposition
          was to allow the connection to complete) and `event.category:intrusion_detection
          AND event.type:allowed` (to indicate a network intrusion prevention system
          event for which the IPS disposition was to allow the connection to complete).
          You can further distinguish allowed operations using the ECS `event.action`
          field, populating with values of your choosing, such as "allow", "detect",
          or "pass".
        name: allowed
      - description: The change event type is used for the subset of events within
          a category that indicate that something has changed. If semantics best describe
          an event as modified, then include them in this subcategory. Common examples
          include `event.category:process AND event.type:change`, and `event.category:file
          AND event.type:change`. You can further distinguish change operations using
          the ECS `event.action` field.
        name: change
      - description: Used primarily with `event.category:network` this value is used
          for the subset of network traffic that includes sufficient information for
          the event to be included in flow or connection analysis. Events in this
          subcategory will contain at least source and destination IP addresses, source
          and destination TCP/UDP ports, and will usually contain counts of bytes
          and/or packets transferred. Events in this subcategory may contain unidirectional
          or bidirectional information, including summary information. Use this subcategory
          to visualize and analyze network connections. Flow analysis, including Netflow,
          IPFIX, and other flow-related events fit in this subcategory. Note that
          firewall events from many Next-Generation Firewall (NGFW) devices will also
          fit into this subcategory.  A common filter for flow/connection information
          would be `event.category:network AND event.type:connection AND event.type:end`
          (to view or analyze all completed network connections, ignoring mid-flow
          reports). You can further distinguish connection events using the ECS `event.action`
          field, populating with values of your choosing, such as "timeout", or "reset".
        name: connection
      - description: The "creation" event type is used for the subset of events within
          a category that indicate that something was created. A common example is
          `event.category:file AND event.type:creation`.
        name: creation
      - description: The deletion event type is used for the subset of events within
          a category that indicate that something was deleted. A common example is
          `event.category:file AND event.type:deletion` to indicate that a file has
          been deleted.
        name: deletion
      - description: The denied event type is used for the subset of events within
          a category that indicate that something was denied. Common examples include
          `event.category:network AND event.type:denied` (to indicate a network firewall
          event for which the firewall disposition was to deny the connection) and
          `event.category:intrusion_detection AND event.type:denied` (to indicate
          a network intrusion prevention system event for which the IPS disposition
          was to deny the connection to complete). You can further distinguish denied
          operations using the ECS `event.action` field, populating with values of
          your choosing, such as "blocked", "dropped", or "quarantined".
        name: denied
      - description: The end event type is used for the subset of events within a
          category that indicate something has ended. A common example is `event.category:process
          AND event.type:end`.
        name: end
      - description: The error event type is used for the subset of events within
          a category that indicate or describe an error. A common example is `event.category:database
          AND event.type:error`. Note that pipeline errors that occur during the event
          ingestion process should not use this `event.type` value. Instead, they
          should use `event.kind:pipeline_error`.
        name: error
      - description: 'The group event type is used for the subset of events within
          a category that are related to group objects. Common example: `event.category:iam
          AND event.type:creation AND event.type:group`. You can further distinguish
          group operations using the ECS `event.action` field.'
        name: group
      - description: 'The indicator event type is used for the subset of events within
          a category that contain details about indicators of compromise (IOCs).

          A common example is `event.category:threat AND event.type:indicator`.'
        name: indicator
      - description: The info event type is used for the subset of events within a
          category that indicate that they are purely informational, and don't report
          a state change, or any type of action. For example, an initial run of a
          file integrity monitoring system (FIM), where an agent reports all files
          under management, would fall into the "info" subcategory. Similarly, an
          event containing a dump of all currently running processes (as opposed to
          reporting that a process started/ended) would fall into the "info" subcategory.
          An additional common examples is `event.category:intrusion_detection AND
          event.type:info`.
        name: info
      - description: The installation event type is used for the subset of events
          within a category that indicate that something was installed. A common example
          is `event.category:package` AND `event.type:installation`.
        name: installation
      - description: The protocol event type is used for the subset of events within
          a category that indicate that they contain protocol details or analysis,
          beyond simply identifying the protocol. Generally, network events that contain
          specific protocol details will fall into this subcategory. A common example
          is `event.category:network AND event.type:protocol AND event.type:connection
          AND event.type:end` (to indicate that the event is a network connection
          event sent at the end of a connection that also includes a protocol detail
          breakdown). Note that events that only indicate the name or id of the protocol
          should not use the protocol value. Further note that when the protocol subcategory
          is used, the identified protocol is populated in the ECS `network.protocol`
          field.
        name: protocol
      - description: The start event type is used for the subset of events within
          a category that indicate something has started. A common example is `event.category:process
          AND event.type:start`.
        name: start
      - description: 'The user event type is used for the subset of events within
          a category that are related to user objects. Common example: `event.category:iam
          AND event.type:deletion AND event.type:user`. You can further distinguish
          user operations using the ECS `event.action` field.'
        name: user
      dashed_name: event-type
      description: 'This is one of four ECS Categorization Fields, and indicates the
        third level in the ECS category hierarchy.

        `event.type` represents a categorization "sub-bucket" that, when used along
        with the `event.category` field values, enables filtering events down to a
        level appropriate for single visualization.

        This field is an array. This will allow proper categorization of some events
        that fall in multiple event types.'
      flat_name: event.type
      ignore_above: 1024
      level: core
      name: type
      normalize:
      - array
      short: Event type. The third categorization field in the hierarchy.
      type: keyword
    event.url:
      dashed_name: event-url
      description: 'URL linking to an external system to continue investigation of
        this event.

        This URL links to another system where in-depth investigation of the specific
        occurrence of this event can take place. Alert events, indicated by `event.kind:alert`,
        are a common use case for this field.'
      example: https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe
      flat_name: event.url
      ignore_above: 1024
      level: extended
      name: url
      normalize: []
      short: Event investigation URL
      type: keyword
  group: 2
  name: event
  prefix: event.
  short: Fields breaking down the event details.
  title: Event
  type: group
its:
  description: Common ITS custom field
  fields:
    its.id:
      dashed_name: its-id
      description: Record's ID in ITS
      flat_name: its.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      short: Record's ID in ITS
      type: keyword
  group: 2
  name: its
  prefix: its.
  short: Common ITS custom field
  title: ITS
  type: group
related:
  description: 'This field set is meant to facilitate pivoting around a piece of data.

    Some pieces of information can be seen in many places in an ECS event. To facilitate
    searching for them, store an array of all seen values to their corresponding field
    in `related.`.

    A concrete example is IP addresses, which can be under host, observer, source,
    destination, client, server, and network.forwarded_ip. If you append all IPs to
    `related.ip`, you can then search for a given IP trivially, no matter where it
    appeared, by querying `related.ip:192.0.2.15`.'
  fields:
    related.hash:
      dashed_name: related-hash
      description: All the hashes seen on your event. Populating this field, then
        using it to search for hashes can help in situations where you're unsure what
        the hash algorithm is (and therefore which key name to search).
      flat_name: related.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize:
      - array
      short: All the hashes seen on your event.
      type: keyword
    related.hosts:
      dashed_name: related-hosts
      description: All hostnames or other host identifiers seen on your event. Example
        identifiers include FQDNs, domain names, workstation names, or aliases.
      flat_name: related.hosts
      ignore_above: 1024
      level: extended
      name: hosts
      normalize:
      - array
      short: All the host identifiers seen on your event.
      type: keyword
    related.ip:
      dashed_name: related-ip
      description: All of the IPs seen on your event.
      flat_name: related.ip
      level: extended
      name: ip
      normalize:
      - array
      short: All of the IPs seen on your event.
      type: ip
    related.user:
      dashed_name: related-user
      description: All the user names or other user identifiers seen on the event.
      flat_name: related.user
      ignore_above: 1024
      level: extended
      name: user
      normalize:
      - array
      short: All the user names or other user identifiers seen on the event.
      type: keyword
  group: 2
  name: related
  prefix: related.
  short: Fields meant to facilitate pivoting around a piece of data.
  title: Related
  type: group
user:
  description: 'The user fields describe information about the user that is relevant
    to the event.

    Fields can have one entry or multiple entries. If a user has more than one id,
    provide an array that includes all of them.'
  fields:
    user.changes.domain:
      dashed_name: user-changes-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.changes.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.changes.email:
      dashed_name: user-changes-email
      description: User email address.
      flat_name: user.changes.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.changes.full_name:
      dashed_name: user-changes-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.changes.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.changes.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.changes.group.domain:
      dashed_name: user-changes-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.changes.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.changes.group.id:
      dashed_name: user-changes-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.changes.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.changes.group.name:
      dashed_name: user-changes-group-name
      description: Name of the group.
      flat_name: user.changes.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.changes.hash:
      dashed_name: user-changes-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.changes.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.changes.id:
      dashed_name: user-changes-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.changes.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.changes.its.birthday:
      dashed_name: user-changes-its-birthday
      description: Custom ITS birthday field
      flat_name: user.changes.its.birthday
      level: custom
      name: birthday
      normalize: []
      original_fieldset: user_its
      short: Custom ITS birthday field
      type: date
    user.changes.its.created_at:
      dashed_name: user-changes-its-created-at
      description: Custom ITS created_at field
      flat_name: user.changes.its.created_at
      level: custom
      name: created_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS created_at field
      type: date
    user.changes.its.delete_at:
      dashed_name: user-changes-its-delete-at
      description: Custom ITS delete_at field
      flat_name: user.changes.its.delete_at
      level: custom
      name: delete_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS delete_at field
      type: date
    user.changes.its.email_verified:
      dashed_name: user-changes-its-email-verified
      description: Custom ITS email_verified field
      flat_name: user.changes.its.email_verified
      level: custom
      name: email_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS email_verified field
      type: boolean
    user.changes.its.gender:
      dashed_name: user-changes-its-gender
      description: Custom ITS gender field
      flat_name: user.changes.its.gender
      ignore_above: 1024
      level: custom
      name: gender
      normalize: []
      original_fieldset: user_its
      short: Custom ITS gender field
      type: keyword
    user.changes.its.identities:
      dashed_name: user-changes-its-identities
      description: Custom ITS identities field
      flat_name: user.changes.its.identities
      level: custom
      name: identities
      normalize: []
      original_fieldset: user_its
      short: Custom ITS identities field
      type: nested
    user.changes.its.identities.user.domain:
      dashed_name: user-changes-its-identities-user-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.changes.its.identities.user.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.changes.its.identities.user.email:
      dashed_name: user-changes-its-identities-user-email
      description: User email address.
      flat_name: user.changes.its.identities.user.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.changes.its.identities.user.full_name:
      dashed_name: user-changes-its-identities-user-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.changes.its.identities.user.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.changes.its.identities.user.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.changes.its.identities.user.group.domain:
      dashed_name: user-changes-its-identities-user-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.changes.its.identities.user.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.changes.its.identities.user.group.id:
      dashed_name: user-changes-its-identities-user-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.changes.its.identities.user.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.changes.its.identities.user.group.name:
      dashed_name: user-changes-its-identities-user-group-name
      description: Name of the group.
      flat_name: user.changes.its.identities.user.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.changes.its.identities.user.hash:
      dashed_name: user-changes-its-identities-user-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.changes.its.identities.user.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.changes.its.identities.user.id:
      dashed_name: user-changes-its-identities-user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.changes.its.identities.user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.changes.its.identities.user.name:
      dashed_name: user-changes-its-identities-user-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.changes.its.identities.user.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.changes.its.identities.user.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.changes.its.identities.user.risk.calculated_level:
      dashed_name: user-changes-its-identities-user-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.changes.its.identities.user.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.changes.its.identities.user.risk.calculated_score:
      dashed_name: user-changes-its-identities-user-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.changes.its.identities.user.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.changes.its.identities.user.risk.calculated_score_norm:
      dashed_name: user-changes-its-identities-user-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.changes.its.identities.user.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.changes.its.identities.user.risk.static_level:
      dashed_name: user-changes-its-identities-user-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.changes.its.identities.user.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.changes.its.identities.user.risk.static_score:
      dashed_name: user-changes-its-identities-user-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.changes.its.identities.user.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.changes.its.identities.user.risk.static_score_norm:
      dashed_name: user-changes-its-identities-user-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.changes.its.identities.user.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.changes.its.identities.user.roles:
      dashed_name: user-changes-its-identities-user-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.changes.its.identities.user.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
    user.changes.its.is_guest_user:
      dashed_name: user-changes-its-is-guest-user
      description: Custom ITS is_guest_user field
      flat_name: user.changes.its.is_guest_user
      level: custom
      name: is_guest_user
      normalize: []
      original_fieldset: user_its
      short: Custom ITS is_guest_user field
      type: boolean
    user.changes.its.login_at:
      dashed_name: user-changes-its-login-at
      description: Custom ITS login_at field
      flat_name: user.changes.its.login_at
      level: custom
      name: login_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS login_at field
      type: date
    user.changes.its.phone.country:
      dashed_name: user-changes-its-phone-country
      description: Custom ITS phone country field
      flat_name: user.changes.its.phone.country
      ignore_above: 1024
      level: custom
      name: phone.country
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country field
      type: keyword
    user.changes.its.phone.country_calling_code:
      dashed_name: user-changes-its-phone-country-calling-code
      description: Custom ITS phone country_calling_code field
      flat_name: user.changes.its.phone.country_calling_code
      ignore_above: 1024
      level: custom
      name: phone.country_calling_code
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country_calling_code field
      type: keyword
    user.changes.its.phone.extension:
      dashed_name: user-changes-its-phone-extension
      description: Custom ITS phone extension field
      flat_name: user.changes.its.phone.extension
      ignore_above: 1024
      level: custom
      name: phone.extension
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone extension field
      type: keyword
    user.changes.its.phone.national_number:
      dashed_name: user-changes-its-phone-national-number
      description: Custom ITS phone national_number field
      flat_name: user.changes.its.phone.national_number
      ignore_above: 1024
      level: custom
      name: phone.national_number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone national_number field
      type: keyword
    user.changes.its.phone.number:
      dashed_name: user-changes-its-phone-number
      description: Custom ITS phone number field
      flat_name: user.changes.its.phone.number
      ignore_above: 1024
      level: custom
      name: phone.number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone number field
      type: keyword
    user.changes.its.phone_verified:
      dashed_name: user-changes-its-phone-verified
      description: Custom ITS phone_verified field
      flat_name: user.changes.its.phone_verified
      level: custom
      name: phone_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone_verified field
      type: boolean
    user.changes.its.register_client_id:
      dashed_name: user-changes-its-register-client-id
      description: Custom ITS register_client_id field
      flat_name: user.changes.its.register_client_id
      ignore_above: 1024
      level: custom
      name: register_client_id
      normalize: []
      original_fieldset: user_its
      short: Custom ITS register_client_id field
      type: keyword
    user.changes.its.updated_at:
      dashed_name: user-changes-its-updated-at
      description: Custom ITS updated_at field
      flat_name: user.changes.its.updated_at
      level: custom
      name: updated_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS updated_at field
      type: date
    user.changes.name:
      dashed_name: user-changes-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.changes.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.changes.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.changes.risk.calculated_level:
      dashed_name: user-changes-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.changes.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.changes.risk.calculated_score:
      dashed_name: user-changes-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.changes.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.changes.risk.calculated_score_norm:
      dashed_name: user-changes-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.changes.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.changes.risk.static_level:
      dashed_name: user-changes-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.changes.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.changes.risk.static_score:
      dashed_name: user-changes-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.changes.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.changes.risk.static_score_norm:
      dashed_name: user-changes-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.changes.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.changes.roles:
      dashed_name: user-changes-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.changes.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
    user.domain:
      dashed_name: user-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      short: Name of the directory the user is a member of.
      type: keyword
    user.effective.domain:
      dashed_name: user-effective-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.effective.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.effective.email:
      dashed_name: user-effective-email
      description: User email address.
      flat_name: user.effective.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.effective.full_name:
      dashed_name: user-effective-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.effective.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.effective.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.effective.group.domain:
      dashed_name: user-effective-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.effective.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.effective.group.id:
      dashed_name: user-effective-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.effective.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.effective.group.name:
      dashed_name: user-effective-group-name
      description: Name of the group.
      flat_name: user.effective.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.effective.hash:
      dashed_name: user-effective-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.effective.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.effective.id:
      dashed_name: user-effective-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.effective.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.effective.its.birthday:
      dashed_name: user-effective-its-birthday
      description: Custom ITS birthday field
      flat_name: user.effective.its.birthday
      level: custom
      name: birthday
      normalize: []
      original_fieldset: user_its
      short: Custom ITS birthday field
      type: date
    user.effective.its.created_at:
      dashed_name: user-effective-its-created-at
      description: Custom ITS created_at field
      flat_name: user.effective.its.created_at
      level: custom
      name: created_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS created_at field
      type: date
    user.effective.its.delete_at:
      dashed_name: user-effective-its-delete-at
      description: Custom ITS delete_at field
      flat_name: user.effective.its.delete_at
      level: custom
      name: delete_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS delete_at field
      type: date
    user.effective.its.email_verified:
      dashed_name: user-effective-its-email-verified
      description: Custom ITS email_verified field
      flat_name: user.effective.its.email_verified
      level: custom
      name: email_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS email_verified field
      type: boolean
    user.effective.its.gender:
      dashed_name: user-effective-its-gender
      description: Custom ITS gender field
      flat_name: user.effective.its.gender
      ignore_above: 1024
      level: custom
      name: gender
      normalize: []
      original_fieldset: user_its
      short: Custom ITS gender field
      type: keyword
    user.effective.its.identities:
      dashed_name: user-effective-its-identities
      description: Custom ITS identities field
      flat_name: user.effective.its.identities
      level: custom
      name: identities
      normalize: []
      original_fieldset: user_its
      short: Custom ITS identities field
      type: nested
    user.effective.its.identities.user.domain:
      dashed_name: user-effective-its-identities-user-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.effective.its.identities.user.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.effective.its.identities.user.email:
      dashed_name: user-effective-its-identities-user-email
      description: User email address.
      flat_name: user.effective.its.identities.user.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.effective.its.identities.user.full_name:
      dashed_name: user-effective-its-identities-user-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.effective.its.identities.user.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.effective.its.identities.user.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.effective.its.identities.user.group.domain:
      dashed_name: user-effective-its-identities-user-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.effective.its.identities.user.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.effective.its.identities.user.group.id:
      dashed_name: user-effective-its-identities-user-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.effective.its.identities.user.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.effective.its.identities.user.group.name:
      dashed_name: user-effective-its-identities-user-group-name
      description: Name of the group.
      flat_name: user.effective.its.identities.user.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.effective.its.identities.user.hash:
      dashed_name: user-effective-its-identities-user-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.effective.its.identities.user.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.effective.its.identities.user.id:
      dashed_name: user-effective-its-identities-user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.effective.its.identities.user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.effective.its.identities.user.name:
      dashed_name: user-effective-its-identities-user-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.effective.its.identities.user.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.effective.its.identities.user.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.effective.its.identities.user.risk.calculated_level:
      dashed_name: user-effective-its-identities-user-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.effective.its.identities.user.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.effective.its.identities.user.risk.calculated_score:
      dashed_name: user-effective-its-identities-user-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.effective.its.identities.user.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.effective.its.identities.user.risk.calculated_score_norm:
      dashed_name: user-effective-its-identities-user-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.effective.its.identities.user.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.effective.its.identities.user.risk.static_level:
      dashed_name: user-effective-its-identities-user-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.effective.its.identities.user.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.effective.its.identities.user.risk.static_score:
      dashed_name: user-effective-its-identities-user-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.effective.its.identities.user.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.effective.its.identities.user.risk.static_score_norm:
      dashed_name: user-effective-its-identities-user-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.effective.its.identities.user.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.effective.its.identities.user.roles:
      dashed_name: user-effective-its-identities-user-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.effective.its.identities.user.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
    user.effective.its.is_guest_user:
      dashed_name: user-effective-its-is-guest-user
      description: Custom ITS is_guest_user field
      flat_name: user.effective.its.is_guest_user
      level: custom
      name: is_guest_user
      normalize: []
      original_fieldset: user_its
      short: Custom ITS is_guest_user field
      type: boolean
    user.effective.its.login_at:
      dashed_name: user-effective-its-login-at
      description: Custom ITS login_at field
      flat_name: user.effective.its.login_at
      level: custom
      name: login_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS login_at field
      type: date
    user.effective.its.phone.country:
      dashed_name: user-effective-its-phone-country
      description: Custom ITS phone country field
      flat_name: user.effective.its.phone.country
      ignore_above: 1024
      level: custom
      name: phone.country
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country field
      type: keyword
    user.effective.its.phone.country_calling_code:
      dashed_name: user-effective-its-phone-country-calling-code
      description: Custom ITS phone country_calling_code field
      flat_name: user.effective.its.phone.country_calling_code
      ignore_above: 1024
      level: custom
      name: phone.country_calling_code
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country_calling_code field
      type: keyword
    user.effective.its.phone.extension:
      dashed_name: user-effective-its-phone-extension
      description: Custom ITS phone extension field
      flat_name: user.effective.its.phone.extension
      ignore_above: 1024
      level: custom
      name: phone.extension
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone extension field
      type: keyword
    user.effective.its.phone.national_number:
      dashed_name: user-effective-its-phone-national-number
      description: Custom ITS phone national_number field
      flat_name: user.effective.its.phone.national_number
      ignore_above: 1024
      level: custom
      name: phone.national_number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone national_number field
      type: keyword
    user.effective.its.phone.number:
      dashed_name: user-effective-its-phone-number
      description: Custom ITS phone number field
      flat_name: user.effective.its.phone.number
      ignore_above: 1024
      level: custom
      name: phone.number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone number field
      type: keyword
    user.effective.its.phone_verified:
      dashed_name: user-effective-its-phone-verified
      description: Custom ITS phone_verified field
      flat_name: user.effective.its.phone_verified
      level: custom
      name: phone_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone_verified field
      type: boolean
    user.effective.its.register_client_id:
      dashed_name: user-effective-its-register-client-id
      description: Custom ITS register_client_id field
      flat_name: user.effective.its.register_client_id
      ignore_above: 1024
      level: custom
      name: register_client_id
      normalize: []
      original_fieldset: user_its
      short: Custom ITS register_client_id field
      type: keyword
    user.effective.its.updated_at:
      dashed_name: user-effective-its-updated-at
      description: Custom ITS updated_at field
      flat_name: user.effective.its.updated_at
      level: custom
      name: updated_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS updated_at field
      type: date
    user.effective.name:
      dashed_name: user-effective-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.effective.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.effective.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.effective.risk.calculated_level:
      dashed_name: user-effective-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.effective.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.effective.risk.calculated_score:
      dashed_name: user-effective-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.effective.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.effective.risk.calculated_score_norm:
      dashed_name: user-effective-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.effective.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.effective.risk.static_level:
      dashed_name: user-effective-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.effective.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.effective.risk.static_score:
      dashed_name: user-effective-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.effective.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.effective.risk.static_score_norm:
      dashed_name: user-effective-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.effective.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.effective.roles:
      dashed_name: user-effective-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.effective.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
    user.email:
      dashed_name: user-email
      description: User email address.
      flat_name: user.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      short: User email address.
      type: keyword
    user.full_name:
      dashed_name: user-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      short: User's full name, if available.
      type: keyword
    user.group.domain:
      dashed_name: user-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.group.id:
      dashed_name: user-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.group.name:
      dashed_name: user-group-name
      description: Name of the group.
      flat_name: user.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.hash:
      dashed_name: user-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.id:
      dashed_name: user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      short: Unique identifier of the user.
      type: keyword
    user.its.birthday:
      dashed_name: user-its-birthday
      description: Custom ITS birthday field
      flat_name: user.its.birthday
      level: custom
      name: birthday
      normalize: []
      original_fieldset: user_its
      short: Custom ITS birthday field
      type: date
    user.its.created_at:
      dashed_name: user-its-created-at
      description: Custom ITS created_at field
      flat_name: user.its.created_at
      level: custom
      name: created_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS created_at field
      type: date
    user.its.delete_at:
      dashed_name: user-its-delete-at
      description: Custom ITS delete_at field
      flat_name: user.its.delete_at
      level: custom
      name: delete_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS delete_at field
      type: date
    user.its.email_verified:
      dashed_name: user-its-email-verified
      description: Custom ITS email_verified field
      flat_name: user.its.email_verified
      level: custom
      name: email_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS email_verified field
      type: boolean
    user.its.gender:
      dashed_name: user-its-gender
      description: Custom ITS gender field
      flat_name: user.its.gender
      ignore_above: 1024
      level: custom
      name: gender
      normalize: []
      original_fieldset: user_its
      short: Custom ITS gender field
      type: keyword
    user.its.identities:
      dashed_name: user-its-identities
      description: Custom ITS identities field
      flat_name: user.its.identities
      level: custom
      name: identities
      normalize: []
      original_fieldset: user_its
      short: Custom ITS identities field
      type: nested
    user.its.identities.user.domain:
      dashed_name: user-its-identities-user-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.its.identities.user.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.its.identities.user.email:
      dashed_name: user-its-identities-user-email
      description: User email address.
      flat_name: user.its.identities.user.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.its.identities.user.full_name:
      dashed_name: user-its-identities-user-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.its.identities.user.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.its.identities.user.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.its.identities.user.group.domain:
      dashed_name: user-its-identities-user-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.its.identities.user.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.its.identities.user.group.id:
      dashed_name: user-its-identities-user-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.its.identities.user.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.its.identities.user.group.name:
      dashed_name: user-its-identities-user-group-name
      description: Name of the group.
      flat_name: user.its.identities.user.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.its.identities.user.hash:
      dashed_name: user-its-identities-user-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.its.identities.user.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.its.identities.user.id:
      dashed_name: user-its-identities-user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.its.identities.user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.its.identities.user.name:
      dashed_name: user-its-identities-user-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.its.identities.user.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.its.identities.user.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.its.identities.user.risk.calculated_level:
      dashed_name: user-its-identities-user-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.its.identities.user.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.its.identities.user.risk.calculated_score:
      dashed_name: user-its-identities-user-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.its.identities.user.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.its.identities.user.risk.calculated_score_norm:
      dashed_name: user-its-identities-user-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.its.identities.user.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.its.identities.user.risk.static_level:
      dashed_name: user-its-identities-user-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.its.identities.user.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.its.identities.user.risk.static_score:
      dashed_name: user-its-identities-user-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.its.identities.user.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.its.identities.user.risk.static_score_norm:
      dashed_name: user-its-identities-user-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.its.identities.user.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.its.identities.user.roles:
      dashed_name: user-its-identities-user-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.its.identities.user.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
    user.its.is_guest_user:
      dashed_name: user-its-is-guest-user
      description: Custom ITS is_guest_user field
      flat_name: user.its.is_guest_user
      level: custom
      name: is_guest_user
      normalize: []
      original_fieldset: user_its
      short: Custom ITS is_guest_user field
      type: boolean
    user.its.login_at:
      dashed_name: user-its-login-at
      description: Custom ITS login_at field
      flat_name: user.its.login_at
      level: custom
      name: login_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS login_at field
      type: date
    user.its.phone.country:
      dashed_name: user-its-phone-country
      description: Custom ITS phone country field
      flat_name: user.its.phone.country
      ignore_above: 1024
      level: custom
      name: phone.country
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country field
      type: keyword
    user.its.phone.country_calling_code:
      dashed_name: user-its-phone-country-calling-code
      description: Custom ITS phone country_calling_code field
      flat_name: user.its.phone.country_calling_code
      ignore_above: 1024
      level: custom
      name: phone.country_calling_code
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country_calling_code field
      type: keyword
    user.its.phone.extension:
      dashed_name: user-its-phone-extension
      description: Custom ITS phone extension field
      flat_name: user.its.phone.extension
      ignore_above: 1024
      level: custom
      name: phone.extension
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone extension field
      type: keyword
    user.its.phone.national_number:
      dashed_name: user-its-phone-national-number
      description: Custom ITS phone national_number field
      flat_name: user.its.phone.national_number
      ignore_above: 1024
      level: custom
      name: phone.national_number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone national_number field
      type: keyword
    user.its.phone.number:
      dashed_name: user-its-phone-number
      description: Custom ITS phone number field
      flat_name: user.its.phone.number
      ignore_above: 1024
      level: custom
      name: phone.number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone number field
      type: keyword
    user.its.phone_verified:
      dashed_name: user-its-phone-verified
      description: Custom ITS phone_verified field
      flat_name: user.its.phone_verified
      level: custom
      name: phone_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone_verified field
      type: boolean
    user.its.register_client_id:
      dashed_name: user-its-register-client-id
      description: Custom ITS register_client_id field
      flat_name: user.its.register_client_id
      ignore_above: 1024
      level: custom
      name: register_client_id
      normalize: []
      original_fieldset: user_its
      short: Custom ITS register_client_id field
      type: keyword
    user.its.updated_at:
      dashed_name: user-its-updated-at
      description: Custom ITS updated_at field
      flat_name: user.its.updated_at
      level: custom
      name: updated_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS updated_at field
      type: date
    user.name:
      dashed_name: user-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      short: Short name or login of the user.
      type: keyword
    user.risk.calculated_level:
      dashed_name: user-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.risk.calculated_score:
      dashed_name: user-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.risk.calculated_score_norm:
      dashed_name: user-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.risk.static_level:
      dashed_name: user-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.risk.static_score:
      dashed_name: user-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.risk.static_score_norm:
      dashed_name: user-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.roles:
      dashed_name: user-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      short: Array of user roles at the time of the event.
      type: keyword
    user.target.domain:
      dashed_name: user-target-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.target.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.target.email:
      dashed_name: user-target-email
      description: User email address.
      flat_name: user.target.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.target.full_name:
      dashed_name: user-target-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.target.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.target.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.target.group.domain:
      dashed_name: user-target-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.target.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.target.group.id:
      dashed_name: user-target-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.target.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.target.group.name:
      dashed_name: user-target-group-name
      description: Name of the group.
      flat_name: user.target.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.target.hash:
      dashed_name: user-target-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.target.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.target.id:
      dashed_name: user-target-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.target.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.target.its.birthday:
      dashed_name: user-target-its-birthday
      description: Custom ITS birthday field
      flat_name: user.target.its.birthday
      level: custom
      name: birthday
      normalize: []
      original_fieldset: user_its
      short: Custom ITS birthday field
      type: date
    user.target.its.created_at:
      dashed_name: user-target-its-created-at
      description: Custom ITS created_at field
      flat_name: user.target.its.created_at
      level: custom
      name: created_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS created_at field
      type: date
    user.target.its.delete_at:
      dashed_name: user-target-its-delete-at
      description: Custom ITS delete_at field
      flat_name: user.target.its.delete_at
      level: custom
      name: delete_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS delete_at field
      type: date
    user.target.its.email_verified:
      dashed_name: user-target-its-email-verified
      description: Custom ITS email_verified field
      flat_name: user.target.its.email_verified
      level: custom
      name: email_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS email_verified field
      type: boolean
    user.target.its.gender:
      dashed_name: user-target-its-gender
      description: Custom ITS gender field
      flat_name: user.target.its.gender
      ignore_above: 1024
      level: custom
      name: gender
      normalize: []
      original_fieldset: user_its
      short: Custom ITS gender field
      type: keyword
    user.target.its.identities:
      dashed_name: user-target-its-identities
      description: Custom ITS identities field
      flat_name: user.target.its.identities
      level: custom
      name: identities
      normalize: []
      original_fieldset: user_its
      short: Custom ITS identities field
      type: nested
    user.target.its.identities.user.domain:
      dashed_name: user-target-its-identities-user-domain
      description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.target.its.identities.user.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: user
      short: Name of the directory the user is a member of.
      type: keyword
    user.target.its.identities.user.email:
      dashed_name: user-target-its-identities-user-email
      description: User email address.
      flat_name: user.target.its.identities.user.email
      ignore_above: 1024
      level: extended
      name: email
      normalize: []
      original_fieldset: user
      short: User email address.
      type: keyword
    user.target.its.identities.user.full_name:
      dashed_name: user-target-its-identities-user-full-name
      description: User's full name, if available.
      example: Albert Einstein
      flat_name: user.target.its.identities.user.full_name
      ignore_above: 1024
      level: extended
      multi_fields:
      - flat_name: user.target.its.identities.user.full_name.text
        name: text
        type: match_only_text
      name: full_name
      normalize: []
      original_fieldset: user
      short: User's full name, if available.
      type: keyword
    user.target.its.identities.user.group.domain:
      dashed_name: user-target-its-identities-user-group-domain
      description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      flat_name: user.target.its.identities.user.group.domain
      ignore_above: 1024
      level: extended
      name: domain
      normalize: []
      original_fieldset: group
      short: Name of the directory the group is a member of.
      type: keyword
    user.target.its.identities.user.group.id:
      dashed_name: user-target-its-identities-user-group-id
      description: Unique identifier for the group on the system/platform.
      flat_name: user.target.its.identities.user.group.id
      ignore_above: 1024
      level: extended
      name: id
      normalize: []
      original_fieldset: group
      short: Unique identifier for the group on the system/platform.
      type: keyword
    user.target.its.identities.user.group.name:
      dashed_name: user-target-its-identities-user-group-name
      description: Name of the group.
      flat_name: user.target.its.identities.user.group.name
      ignore_above: 1024
      level: extended
      name: name
      normalize: []
      original_fieldset: group
      short: Name of the group.
      type: keyword
    user.target.its.identities.user.hash:
      dashed_name: user-target-its-identities-user-hash
      description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      flat_name: user.target.its.identities.user.hash
      ignore_above: 1024
      level: extended
      name: hash
      normalize: []
      original_fieldset: user
      short: Unique user hash to correlate information for a user in anonymized form.
      type: keyword
    user.target.its.identities.user.id:
      dashed_name: user-target-its-identities-user-id
      description: Unique identifier of the user.
      example: S-1-5-21-202424912787-2692429404-2351956786-1000
      flat_name: user.target.its.identities.user.id
      ignore_above: 1024
      level: core
      name: id
      normalize: []
      original_fieldset: user
      short: Unique identifier of the user.
      type: keyword
    user.target.its.identities.user.name:
      dashed_name: user-target-its-identities-user-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.target.its.identities.user.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.target.its.identities.user.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.target.its.identities.user.risk.calculated_level:
      dashed_name: user-target-its-identities-user-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.target.its.identities.user.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.target.its.identities.user.risk.calculated_score:
      dashed_name: user-target-its-identities-user-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.target.its.identities.user.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.target.its.identities.user.risk.calculated_score_norm:
      dashed_name: user-target-its-identities-user-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.target.its.identities.user.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.target.its.identities.user.risk.static_level:
      dashed_name: user-target-its-identities-user-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.target.its.identities.user.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.target.its.identities.user.risk.static_score:
      dashed_name: user-target-its-identities-user-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.target.its.identities.user.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.target.its.identities.user.risk.static_score_norm:
      dashed_name: user-target-its-identities-user-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.target.its.identities.user.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.target.its.identities.user.roles:
      dashed_name: user-target-its-identities-user-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.target.its.identities.user.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
    user.target.its.is_guest_user:
      dashed_name: user-target-its-is-guest-user
      description: Custom ITS is_guest_user field
      flat_name: user.target.its.is_guest_user
      level: custom
      name: is_guest_user
      normalize: []
      original_fieldset: user_its
      short: Custom ITS is_guest_user field
      type: boolean
    user.target.its.login_at:
      dashed_name: user-target-its-login-at
      description: Custom ITS login_at field
      flat_name: user.target.its.login_at
      level: custom
      name: login_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS login_at field
      type: date
    user.target.its.phone.country:
      dashed_name: user-target-its-phone-country
      description: Custom ITS phone country field
      flat_name: user.target.its.phone.country
      ignore_above: 1024
      level: custom
      name: phone.country
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country field
      type: keyword
    user.target.its.phone.country_calling_code:
      dashed_name: user-target-its-phone-country-calling-code
      description: Custom ITS phone country_calling_code field
      flat_name: user.target.its.phone.country_calling_code
      ignore_above: 1024
      level: custom
      name: phone.country_calling_code
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone country_calling_code field
      type: keyword
    user.target.its.phone.extension:
      dashed_name: user-target-its-phone-extension
      description: Custom ITS phone extension field
      flat_name: user.target.its.phone.extension
      ignore_above: 1024
      level: custom
      name: phone.extension
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone extension field
      type: keyword
    user.target.its.phone.national_number:
      dashed_name: user-target-its-phone-national-number
      description: Custom ITS phone national_number field
      flat_name: user.target.its.phone.national_number
      ignore_above: 1024
      level: custom
      name: phone.national_number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone national_number field
      type: keyword
    user.target.its.phone.number:
      dashed_name: user-target-its-phone-number
      description: Custom ITS phone number field
      flat_name: user.target.its.phone.number
      ignore_above: 1024
      level: custom
      name: phone.number
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone number field
      type: keyword
    user.target.its.phone_verified:
      dashed_name: user-target-its-phone-verified
      description: Custom ITS phone_verified field
      flat_name: user.target.its.phone_verified
      level: custom
      name: phone_verified
      normalize: []
      original_fieldset: user_its
      short: Custom ITS phone_verified field
      type: boolean
    user.target.its.register_client_id:
      dashed_name: user-target-its-register-client-id
      description: Custom ITS register_client_id field
      flat_name: user.target.its.register_client_id
      ignore_above: 1024
      level: custom
      name: register_client_id
      normalize: []
      original_fieldset: user_its
      short: Custom ITS register_client_id field
      type: keyword
    user.target.its.updated_at:
      dashed_name: user-target-its-updated-at
      description: Custom ITS updated_at field
      flat_name: user.target.its.updated_at
      level: custom
      name: updated_at
      normalize: []
      original_fieldset: user_its
      short: Custom ITS updated_at field
      type: date
    user.target.name:
      dashed_name: user-target-name
      description: Short name or login of the user.
      example: a.einstein
      flat_name: user.target.name
      ignore_above: 1024
      level: core
      multi_fields:
      - flat_name: user.target.name.text
        name: text
        type: match_only_text
      name: name
      normalize: []
      original_fieldset: user
      short: Short name or login of the user.
      type: keyword
    user.target.risk.calculated_level:
      dashed_name: user-target-risk-calculated-level
      description: A risk classification level calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: High
      flat_name: user.target.risk.calculated_level
      ignore_above: 1024
      level: extended
      name: calculated_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: keyword
    user.target.risk.calculated_score:
      dashed_name: user-target-risk-calculated-score
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring.
      example: 880.73
      flat_name: user.target.risk.calculated_score
      level: extended
      name: calculated_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score calculated by an internal system as part
        of entity analytics and entity risk scoring.
      type: float
    user.target.risk.calculated_score_norm:
      dashed_name: user-target-risk-calculated-score-norm
      description: A risk classification score calculated by an internal system as
        part of entity analytics and entity risk scoring, and normalized to a range
        of 0 to 100.
      example: 88.73
      flat_name: user.target.risk.calculated_score_norm
      level: extended
      name: calculated_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an internal system.
      type: float
    user.target.risk.static_level:
      dashed_name: user-target-risk-static-level
      description: A risk classification level obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: High
      flat_name: user.target.risk.static_level
      ignore_above: 1024
      level: extended
      name: static_level
      normalize: []
      original_fieldset: risk
      short: A risk classification level obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: keyword
    user.target.risk.static_score:
      dashed_name: user-target-risk-static-score
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform.
      example: 830.0
      flat_name: user.target.risk.static_score
      level: extended
      name: static_score
      normalize: []
      original_fieldset: risk
      short: A risk classification score obtained from outside the system, such as
        from some external Threat Intelligence Platform.
      type: float
    user.target.risk.static_score_norm:
      dashed_name: user-target-risk-static-score-norm
      description: A risk classification score obtained from outside the system, such
        as from some external Threat Intelligence Platform, and normalized to a range
        of 0 to 100.
      example: 83.0
      flat_name: user.target.risk.static_score_norm
      level: extended
      name: static_score_norm
      normalize: []
      original_fieldset: risk
      short: A normalized risk score calculated by an external system.
      type: float
    user.target.roles:
      dashed_name: user-target-roles
      description: Array of user roles at the time of the event.
      example: '["kibana_admin", "reporting_user"]'
      flat_name: user.target.roles
      ignore_above: 1024
      level: extended
      name: roles
      normalize:
      - array
      original_fieldset: user
      short: Array of user roles at the time of the event.
      type: keyword
  group: 2
  name: user
  nestings:
  - user.changes
  - user.effective
  - user.group
  - user.its
  - user.risk
  - user.target
  prefix: user.
  reusable:
    expected:
    - as: user
      at: client
      full: client.user
    - as: user
      at: destination
      full: destination.user
    - as: user
      at: server
      full: server.user
    - as: user
      at: source
      full: source.user
    - as: target
      at: user
      full: user.target
      short_override: Targeted user of action taken.
    - as: effective
      at: user
      full: user.effective
      short_override: User whose privileges were assumed.
    - as: changes
      at: user
      full: user.changes
      short_override: Captures changes made to a user.
    - as: user
      at: process
      full: process.user
      short_override: The effective user (euid).
    - as: saved_user
      at: process
      full: process.saved_user
      short_override: The saved user (suid).
    - as: real_user
      at: process
      full: process.real_user
      short_override: The real user (ruid). Identifies the real owner of the process.
    - as: attested_user
      at: process
      beta: Reusing the `user` fields in this location is currently considered beta.
      full: process.attested_user
      short_override: The externally attested user based on an external source such
        as the Kube API.
    - as: user
      at: user_its.identities
      full: user_its.identities.user
    top_level: true
  reused_here:
  - full: user.group
    schema_name: group
    short: User's group relevant to the event.
  - full: user.risk
    schema_name: risk
    short: Fields for describing risk score and level.
  - full: user.its
    schema_name: user_its
    short: Custom User ITS field
  - full: user.target
    schema_name: user
    short: Targeted user of action taken.
  - full: user.effective
    schema_name: user
    short: User whose privileges were assumed.
  - full: user.changes
    schema_name: user
    short: Captures changes made to a user.
  short: Fields to describe the user relevant to the event.
  title: User
  type: group
